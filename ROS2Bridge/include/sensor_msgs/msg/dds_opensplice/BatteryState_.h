//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: BatteryState_.h
//  Source: sensor_msgs\msg\dds_opensplice\BatteryState_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.7.180404OSS
//  
//******************************************************************
#ifndef _BATTERYSTATE__H_
#define _BATTERYSTATE__H_

#include "sacpp_mapping.h"
#include "Header_.h"
#include "sensor_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace sensor_msgs
{
   namespace msg
   {
      namespace dds_
      {
         struct BatteryState_;
         const DDS::Octet BatteryState__POWER_SUPPLY_STATUS_UNKNOWN = (DDS::Octet) 0;
         const DDS::Octet BatteryState__POWER_SUPPLY_STATUS_CHARGING = (DDS::Octet) 1;
         const DDS::Octet BatteryState__POWER_SUPPLY_STATUS_DISCHARGING = (DDS::Octet) 2;
         const DDS::Octet BatteryState__POWER_SUPPLY_STATUS_NOT_CHARGING = (DDS::Octet) 3;
         const DDS::Octet BatteryState__POWER_SUPPLY_STATUS_FULL = (DDS::Octet) 4;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_UNKNOWN = (DDS::Octet) 0;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_GOOD = (DDS::Octet) 1;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_OVERHEAT = (DDS::Octet) 2;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_DEAD = (DDS::Octet) 3;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_OVERVOLTAGE = (DDS::Octet) 4;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = (DDS::Octet) 5;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_COLD = (DDS::Octet) 6;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = (DDS::Octet) 7;
         const DDS::Octet BatteryState__POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE = (DDS::Octet) 8;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_UNKNOWN = (DDS::Octet) 0;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_NIMH = (DDS::Octet) 1;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LION = (DDS::Octet) 2;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIPO = (DDS::Octet) 3;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIFE = (DDS::Octet) 4;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_NICD = (DDS::Octet) 5;
         const DDS::Octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIMN = (DDS::Octet) 6;

         struct ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_sensor_msgs BatteryState_
         {
               struct _cell_voltage__seq_uniq_ {};
               typedef DDS_DCPSUFLSeq < DDS::Float, struct _cell_voltage__seq_uniq_> _cell_voltage__seq;
               typedef DDS_DCPSSequence_var < _cell_voltage__seq> _cell_voltage__seq_var;
               typedef DDS_DCPSSequence_out < _cell_voltage__seq> _cell_voltage__seq_out;
               ::std_msgs::msg::dds_::Header_ header_;
               DDS::Float voltage_;
               DDS::Float current_;
               DDS::Float charge_;
               DDS::Float capacity_;
               DDS::Float design_capacity_;
               DDS::Float percentage_;
               DDS::Octet power_supply_status_;
               DDS::Octet power_supply_health_;
               DDS::Octet power_supply_technology_;
               DDS::Boolean present_;
               _cell_voltage__seq cell_voltage_;
               DDS::String_mgr location_;
               DDS::String_mgr serial_number_;
         };

         typedef DDS_DCPSStruct_var < BatteryState_> BatteryState__var;
         typedef DDS_DCPSStruct_out < BatteryState_> BatteryState__out;
      }
   }
}




#endif
