//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: BoundedArrayPrimitives_Dcps.h
//  Source: test_msgs\msg\dds_opensplice\BoundedArrayPrimitives_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.7.180404OSS
//  
//******************************************************************
#ifndef _BOUNDEDARRAYPRIMITIVES_DCPS_H_
#define _BOUNDEDARRAYPRIMITIVES_DCPS_H_

#include "sacpp_mapping.h"
#include "dds_dcps.h"
#include "BoundedArrayPrimitives_.h"
#include "test_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace test_msgs
{
   namespace msg
   {
      namespace dds_
      {

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_TypeSupportInterface;

         typedef BoundedArrayPrimitives_TypeSupportInterface * BoundedArrayPrimitives_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < BoundedArrayPrimitives_TypeSupportInterface> BoundedArrayPrimitives_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < BoundedArrayPrimitives_TypeSupportInterface> BoundedArrayPrimitives_TypeSupportInterface_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataWriter;

         typedef BoundedArrayPrimitives_DataWriter * BoundedArrayPrimitives_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < BoundedArrayPrimitives_DataWriter> BoundedArrayPrimitives_DataWriter_var;
         typedef DDS_DCPSInterface_out < BoundedArrayPrimitives_DataWriter> BoundedArrayPrimitives_DataWriter_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataReader;

         typedef BoundedArrayPrimitives_DataReader * BoundedArrayPrimitives_DataReader_ptr;
         typedef DDS_DCPSInterface_var < BoundedArrayPrimitives_DataReader> BoundedArrayPrimitives_DataReader_var;
         typedef DDS_DCPSInterface_out < BoundedArrayPrimitives_DataReader> BoundedArrayPrimitives_DataReader_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataReaderView;

         typedef BoundedArrayPrimitives_DataReaderView * BoundedArrayPrimitives_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < BoundedArrayPrimitives_DataReaderView> BoundedArrayPrimitives_DataReaderView_var;
         typedef DDS_DCPSInterface_out < BoundedArrayPrimitives_DataReaderView> BoundedArrayPrimitives_DataReaderView_out;

         struct BoundedArrayPrimitives_Seq_uniq_ {};
         typedef DDS_DCPSUVLSeq < BoundedArrayPrimitives_, struct BoundedArrayPrimitives_Seq_uniq_> BoundedArrayPrimitives_Seq;
         typedef DDS_DCPSSequence_var < BoundedArrayPrimitives_Seq> BoundedArrayPrimitives_Seq_var;
         typedef DDS_DCPSSequence_out < BoundedArrayPrimitives_Seq> BoundedArrayPrimitives_Seq_out;
         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef BoundedArrayPrimitives_TypeSupportInterface_ptr _ptr_type;
            typedef BoundedArrayPrimitives_TypeSupportInterface_var _var_type;

            static BoundedArrayPrimitives_TypeSupportInterface_ptr _duplicate (BoundedArrayPrimitives_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BoundedArrayPrimitives_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            BoundedArrayPrimitives_TypeSupportInterface_ptr _this () { return this; }


         protected:
            BoundedArrayPrimitives_TypeSupportInterface () {};
            ~BoundedArrayPrimitives_TypeSupportInterface () {};
         private:
            BoundedArrayPrimitives_TypeSupportInterface (const BoundedArrayPrimitives_TypeSupportInterface &);
            BoundedArrayPrimitives_TypeSupportInterface & operator = (const BoundedArrayPrimitives_TypeSupportInterface &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef BoundedArrayPrimitives_DataWriter_ptr _ptr_type;
            typedef BoundedArrayPrimitives_DataWriter_var _var_type;

            static BoundedArrayPrimitives_DataWriter_ptr _duplicate (BoundedArrayPrimitives_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BoundedArrayPrimitives_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            BoundedArrayPrimitives_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const BoundedArrayPrimitives_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const BoundedArrayPrimitives_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const BoundedArrayPrimitives_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (BoundedArrayPrimitives_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BoundedArrayPrimitives_& instance_data) = 0;

         protected:
            BoundedArrayPrimitives_DataWriter () {};
            ~BoundedArrayPrimitives_DataWriter () {};
         private:
            BoundedArrayPrimitives_DataWriter (const BoundedArrayPrimitives_DataWriter &);
            BoundedArrayPrimitives_DataWriter & operator = (const BoundedArrayPrimitives_DataWriter &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef BoundedArrayPrimitives_DataReader_ptr _ptr_type;
            typedef BoundedArrayPrimitives_DataReader_var _var_type;

            static BoundedArrayPrimitives_DataReader_ptr _duplicate (BoundedArrayPrimitives_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BoundedArrayPrimitives_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            BoundedArrayPrimitives_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (BoundedArrayPrimitives_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (BoundedArrayPrimitives_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (BoundedArrayPrimitives_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BoundedArrayPrimitives_& instance) = 0;

         protected:
            BoundedArrayPrimitives_DataReader () {};
            ~BoundedArrayPrimitives_DataReader () {};
         private:
            BoundedArrayPrimitives_DataReader (const BoundedArrayPrimitives_DataReader &);
            BoundedArrayPrimitives_DataReader & operator = (const BoundedArrayPrimitives_DataReader &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs BoundedArrayPrimitives_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef BoundedArrayPrimitives_DataReaderView_ptr _ptr_type;
            typedef BoundedArrayPrimitives_DataReaderView_var _var_type;

            static BoundedArrayPrimitives_DataReaderView_ptr _duplicate (BoundedArrayPrimitives_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BoundedArrayPrimitives_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BoundedArrayPrimitives_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            BoundedArrayPrimitives_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (BoundedArrayPrimitives_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (BoundedArrayPrimitives_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (BoundedArrayPrimitives_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (BoundedArrayPrimitives_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BoundedArrayPrimitives_& instance) = 0;

         protected:
            BoundedArrayPrimitives_DataReaderView () {};
            ~BoundedArrayPrimitives_DataReaderView () {};
         private:
            BoundedArrayPrimitives_DataReaderView (const BoundedArrayPrimitives_DataReaderView &);
            BoundedArrayPrimitives_DataReaderView & operator = (const BoundedArrayPrimitives_DataReaderView &);
         };

      }
   }
}




#endif
